swagger: "2.0"

################################################################################
#                           Service Metadata                                   #
################################################################################
info:
  version: 1.0
  title: A Storage Service
  description: |
              This is a minimal definition for a Storage service.
              Contains:
                - Solution event lifecycle to create/clear solution namespace.
                - Solution context id injected to operation parameter.
  contact:
    name: maintainer name
    email: maintainer@service.com # Used by Murano for service outage notification

tags:
  - name:         keyword
    description:  Description of the tag

################################################################################
#                            API Information                                   #
################################################################################
host: domain.of.your.service
basePath: /
x-health-path: /health # This endpoint needs to return 2xx status code. If omitted basePath is used

################################################################################
#                          Solution lifecycle Events                           #
################################################################################
# Following Operation should generally be restricted with "x-exosite-internal-use: true"
x-exosite-init: createSolution # Triggered by Murano when a solution is created
x-exosite-info: getSolution # Triggered by Murano to get a retrieve custom information
x-exosite-update: updateSolution # Triggered by Murano when a solution is updated
x-exosite-gc: delSolution # Triggered by Murano when a solution is removed

################################################################################
#                                Operations                                    #
################################################################################
paths:
  # Administration endpoint used by Murano solution lifecycle events
  # Those operation uses the "x-internal-use" to prevent the user to access them directly
  /{solution_id}:
    parameters:
      - name: solution_id
        x-exosite-from: solution_id # Indicate this value is injected from the user solution_id
        x-exosite-internalUse: true # Indicate the user cannot provide this parameter
        type: string
        in: path
        description: The solution identifier. Set automatically.
        required: true
    post:
      description: Used by Murano to create a solution namespace.
      operationId: createSolution
      x-exosite-internal-use: true # Indicate that this operation cannot be called from user scripts
      parameters:
        - name: settings
          in: body
          description: The service settings for a solution.
          required: true
          schema:
            $ref: "#/definitions/SolutionSettings"
      responses:
        201:
          description: Solution successfully created
    get:
      description: Used by Murano to get the solution settings.
      operationId: getSolution
      responses:
        200:
          description: Solution settings
          schema:
            $ref: "#/definitions/SolutionInfo"
    put:
      description: Used by Murano to update the solution settings.
      operationId: updateSolution
      x-exosite-internal-use: true
      parameters:
        - name: settings
          in: body
          description: The service settings for a solution.
          required: true
          schema:
            $ref: "#/definitions/SolutionSettings"
      responses:
        204:
          description: Settings updated
    delete:
      description: Used by Murano to remove a solution and clean its namespace.
      operationId: delSolution
      x-exosite-internal-use: true
      responses:
        204:
          description: Solution successfully removed.

  # Service operations available from scripting
  /{solution_id}/data:
    parameters:
      - name: solution_id
        type: string
        in: path
        description: The solution identifier. Set automatically by Murano at service call.
        x-exosite-from: solution_id # Indicate this value is injected from the user solution_id
        x-exosite-internal-use: true # Indicate the user cannot provide this parameter
        required: true
    post:
      description: Save data to the solution namespace.
      operationId: setData
      x-exosite-example: |
                local params = {
                  data = "hello"
                }
                local result = Storageservice.setData(params)
      parameters:
        - name: body
          in: body
          description: Data to save.
          required: true
          schema:
            $ref: "#/definitions/Body"
      responses:
        201:
          description: Data successfully saved
    get:
      description: Retrieve data from the solution namespace.
      operationId: getData
      x-exosite-example: |
                local result = Storageservice.getData() -- return hello
      responses:
        200:
          description: Successfully returned the solution data
          schema:
            $ref: "#/definitions/Body"

################################################################################
#                                 Definitions                                  #
################################################################################
definitions:
  Body:
    type: object
    description: Request payload
    properties:
      data:
        type: string
        description: Data saved in the storage

  Quota:
    type: object
    description: This object contains numeral metrics limitation.
    properties:
      metricName:
        type: integer
        description: This is a metric used to limit the service usage for a solution.

  SolutionSettings:
    description: The service settings for a solution.
    type: object
    properties:
      quota:
        $ref: "#/definitions/Quota"

  SolutionInfo:
    description: The service settings & usage for a solution.
    type: object
    properties:
      quota:
        $ref: "#/definitions/Quota"
      usage:
        type: object
        description: This object contains numeral metrics usage for a given solution.
        properties:
          metricName:
            type: integer
            description: The current usage of the service.
